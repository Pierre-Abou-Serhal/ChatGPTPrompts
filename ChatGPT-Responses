interface Attachment {
  id: string;
  name: string;
  status: string;
}

interface Email {
  id: string;
  subject: string;
  attachments: Attachment[];
}

// Function to update the attachment status in both selectedEmail and emailList
function updateAttachmentStatus(
  selectedEmail: Email,
  emailList: Email[],
  attachmentId: string,
  newStatus: string
): void {
  // Update the attachment in selectedEmail
  const attachmentInSelectedEmail = selectedEmail.attachments.find(att => att.id === attachmentId);
  if (attachmentInSelectedEmail) {
    attachmentInSelectedEmail.status = newStatus;
  }

  // Update the attachment in emailList
  for (const email of emailList) {
    const attachmentInEmail = email.attachments.find(att => att.id === attachmentId);
    if (attachmentInEmail) {
      attachmentInEmail.status = newStatus;
    }
  }
}

// Example Data
let selectedEmail: Email = {
  id: "1",
  subject: "Hello",
  attachments: [
    { id: "a1", name: "file1.pdf", status: "pending" },
    { id: "a2", name: "file2.docx", status: "pending" }
  ]
};

let emailList: Email[] = [
  {
    id: "1",
    subject: "Hello",
    attachments: [
      { id: "a1", name: "file1.pdf", status: "pending" },
      { id: "a2", name: "file2.docx", status: "pending" }
    ]
  },
  {
    id: "2",
    subject: "World",
    attachments: [
      { id: "a3", name: "file3.png", status: "pending" },
      { id: "a4", name: "file4.txt", status: "pending" }
    ]
  }
];

// Update status for attachment "a1"
updateAttachmentStatus(selectedEmail, emailList, "a1", "completed");

console.log(selectedEmail);
console.log(emailList);
