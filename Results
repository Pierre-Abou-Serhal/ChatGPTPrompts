EncryptedPayload encryptedPayload = JsonSerializer.Deserialize<EncryptedPayload>(encryptedContent, _jsonOptions) 
                                            ?? throw new SGBLBadRequestException("Failed to parse encrypted payload");

RSA privateKey = ImportMLEPrivateKey(Path.Combine(AppContext.BaseDirectory, "MLE-Keys", _globalSettings.MlEPrivateKeyName));
        
return JWT.Decode(encryptedPayload.EncData, privateKey);

private static RSA ImportMLEPrivateKey(string pemPath)
    {
        String pem = File.ReadAllText(pemPath);
        PemReader pr = new PemReader(new StringReader(pem));
        object obj = pr.ReadObject();

        RsaPrivateCrtKeyParameters privateKeyParams;

        if (obj is AsymmetricCipherKeyPair keyPair)
        {
            // PEM contains both public and private key
            privateKeyParams = (RsaPrivateCrtKeyParameters) keyPair.Private;
        }
        else if (obj is RsaPrivateCrtKeyParameters keyParams)
        {
            // PEM contains only the private key
            privateKeyParams = keyParams;
        }
        else
        {
            throw new SGBLBadRequestException("Unsupported MLE private key format: " + obj.GetType().FullName);
        }

        var rsaParams = DotNetUtilities.ToRSAParameters(privateKeyParams);
        var rsa = RSA.Create();
        
        rsa.ImportParameters(rsaParams);
        
        return rsa;
    }

Unknown error (0xc100000d)

at Interop.BCrypt.BCryptDecryptRsa(SafeBCryptKeyHandle key, ReadOnlySpan`1 source, Span`1 destination, Void* pPaddingInfo, BCryptEncryptFlags dwFlags, Int32& bytesWritten)
   at System.Security.Cryptography.RSABCrypt.TryDecrypt(ReadOnlySpan`1 data, Span`1 destination, RSAEncryptionPadding padding, Int32& bytesWritten)
   at System.Security.Cryptography.RSA.<Decrypt>g__TryWithDecrypt|17_0(RSA rsa, ReadOnlySpan`1 input, Byte[] destination, RSAEncryptionPadding padding, Int32& bytesWritten)
   at System.Security.Cryptography.RSA.TryWithKeyBuffer[TState](ReadOnlySpan`1 input, TState state, TryFunc`1 callback, Boolean tryKeySizeFirst)
   at System.Security.Cryptography.RSA.Decrypt(ReadOnlySpan`1 data, RSAEncryptionPadding padding)
   at System.Security.Cryptography.RSABCrypt.Decrypt(Byte[] data, RSAEncryptionPadding padding)
   at Jose.RsaOaepKeyManagement.Unwrap(Byte[] encryptedCek, Object key, Int32 cekSizeBits, IDictionary`2 header)
   at Jose.JWE.Decrypt(String jwe, Object key, Nullable`1 expectedJweAlg, Nullable`1 expectedJweEnc, JwtSettings settings)
   at Jose.JWT.DecodeBytes(Iterator parts, Object key, Nullable`1 expectedJwsAlg, Nullable`1 expectedJweAlg, Nullable`1 expectedJweEnc, JwtSettings settings, Byte[] payload)
   at Jose.JWT.Decode(String token, Object key, Nullable`1 jwsAlg, Nullable`1 jweAlg, Nullable`1 jweEnc, JwtSettings settings, String payload)
   at Jose.JWT.Decode(String token, Object key, JwtSettings settings, String payload)
   at BAL.Bal.GetDecryptedPayload(String encryptedContent) in D:\@Workspace\deve-repo\VisaDirect\BAL\Utils.cs:line 101
   at VisaDirect.Controllers.VisaDirectController.DecryptPayload(Nullable`1 content) in D:\@Workspace\deve-repo\VisaDirect\VisaDirect\Controllers\VisaDirectController.cs:line 181
