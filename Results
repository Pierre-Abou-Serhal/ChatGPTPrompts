builder.Services.AddReverseProxy()
    .LoadFromConfig(builder.Configuration.GetSection("ReverseProxy"))
    .ConfigureHttpClient((context, handler) =>
    {
        var clusterId = context.Cluster.ClusterId;

        if (clusterId == "mastercardCluster")
        {
            var certPath = builder.Configuration["Visa:ClientCertificate:Path"];
            var certPassword = builder.Configuration["Visa:ClientCertificate:Password"];

            var clientCert = new X509Certificate2(certPath, certPassword);

            var socketsHandler = handler as SocketsHttpHandler;
            if (socketsHandler != null)
            {
                socketsHandler.SslOptions = new SslClientAuthenticationOptions
                {
                    ClientCertificates = new X509CertificateCollection { clientCert },

                    // WARNING: for development only!
                    RemoteCertificateValidationCallback = (sender, cert, chain, errors) => true
                };
            }
        }

        var proxyAddress = builder.Configuration["WebProxyAddress"];
        if (!string.IsNullOrEmpty(proxyAddress))
        {
            handler.Proxy = new WebProxy(proxyAddress);
            handler.UseProxy = true;
        }
    });