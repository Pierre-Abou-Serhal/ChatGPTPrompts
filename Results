private async Task<(T? Result, HttpStatusCode StatusCode)> PostAsync<T>(string endpoint, string authorization, JsonElement req)
{
    HttpClient httpClient = httpClientFactory.CreateClient(name: "GeneratedClient");

    var request = new HttpRequestMessage(HttpMethod.Post, endpoint)
    {
        Content = new StringContent(req.ToString(), Encoding.UTF8, "application/json")
    };

    request.Headers.Add("Accept", "application/json");
    request.Headers.Add("Authorization", authorization);

    HttpResponseMessage httpResp = await httpClient.SendAsync(request);
    HttpStatusCode statusCode = httpResp.StatusCode;

    string respString = await httpResp.Content.ReadAsStringAsync();

    T? retRes = default;

    if (httpResp.IsSuccessStatusCode)
    {
        retRes = JsonSerializer.Deserialize<T>(respString, new JsonSerializerOptions
        {
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            PropertyNameCaseInsensitive = true
        });
    }

    return (retRes, statusCode);
}