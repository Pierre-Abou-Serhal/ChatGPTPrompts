IEnumerable<Task<GetTransactionByTransferIdResponse>> tasks = mastercardTransactionList.Select(async i =>
{
    try
    {
        using JsonDocument document = JsonDocument.Parse(i.BBOriginalRequest);
        JsonElement rootElement = document.RootElement;

        if (rootElement.TryGetProperty("MasterCardSendPostTransferReq", out JsonElement bbOriginalRequest))
        {
            GetTransactionByTransferIdRequest request = new GetTransactionByTransferIdRequest()
            {
                correlationId = i.BBReference,
                bbReference = i.BBReference,
                masterCardTransactionReference = i.MasterCardTransactionReference,
                t24IBReference = i.T24IBReference,
                bbOriginalRequest = bbOriginalRequest
            };

            return await PostAsync<GetTransactionByTransferIdResponse>(request,
                $"{_globalSettings.OSBEndpointUrl}MasterCardSend/GetTransferById");
        }

        throw new Exception("Could not extract original Backbase request JSON properties!");
    }
    catch (Exception ex)
    {
        // Return a default or error-indicating response
        return new GetTransactionByTransferIdResponse
        {
            CorrelationId = i.BBReference,
            IsSuccess = false,
            ErrorMessage = ex.Message
        };
    }
});

GetTransactionByTransferIdResponse[] responses = await Task.WhenAll(tasks);